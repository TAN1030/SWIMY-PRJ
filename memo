
# 1Day (2023-10-31)

1. JDK 17, 이클립스 (spring 4.0 sett)
2. Spring starter Project 생성
 - Gradle Kotlin / Rombok / thymeleaf
 - 한글 인코딩 설정 
 - run Spring boot app
3. 리액트 프론트엔트 생성
 - npx create-react-app swimy-front
 - npm start
4. 연동&빌드
 - React > Webpack 기본설정 - npm run eject : 숨겨놓은 설정 파일들을 프로젝트 디렉토리에 표시
 - gradle React build 설정 (${workspace_loc:/swimy}, front 위치변경)
 - D:\WS\WS-2023\swimy\build\libs 에 빌드파일 생성확인

## 참고자료
- 스프링부트 기본 셋팅 : https://wikidocs.net/205894
- 리액트 + 스프링부트 : https://ruckus.tistory.com/121 
 ㄴ 리액트 웹팩 : https://maxkim-j.github.io/posts/cra-webpack-config/

-----------------------------------------

# 2Day (2023-11-01)
1. AWS EC2 생성하기
- https://king-ja.tistory.com/99
- https://bbeomgeun.tistory.com/73

2. mysql 설치
 : AWS Linux의 yum에는 mysql 설치경로가 없다. `sudo yum install` 명령어로 yum repository 에 직접등록해 줘야함
 - https://velog.io/@sysy123/AWS-EC2-AWS-Linux-%EC%84%9C%EB%B2%84-MySQL-%EC%84%A4%EC%B9%98
2.1. 설치 
 - AWS Problem: conflicting requests 에러 발생 (OS버전 문제)
  => https://dev.classmethod.jp/articles/ec2-mysql-install-confilicting-requests-error-kr/
 - Can 't connect to local MySQL server through socket (mysqld 폴더 설명)
  => https://seong6496.tistory.com/324
 - `sudo systemctl start mysqld`

2.2. 계정생성 및 권한 부여 / 테스트 테이블생성 / DBeaver 연결
 - https://chobopark.tistory.com/237
 - 현재 root 계정과 비밀번호가 발급되어 있음. 비밀번호 변경 후 사용할 계정을 생성
 - sudo grep 'temporary password' /var/log/mysqld.log
 - mysql -u root + use mysql;
```
mysql> select host, user from user;
mysql> create schema swimyDB;
mysql> use swimyDB;
mysql> grant all privileges on swimyDB.* to 'swimy'@'%'
mysql> flush privileges;
mysql> show grants for swimy@'%';
mysql> select user();
mysql> select database();
```
 - 로그인 : mysql -u swimy -p swimyDB


-----------------------------------------

# 3Day (2023-11-02)
1. Mysql / JPA 설정 (진행중)
- gradle : https://hyunwook.dev/196
- JPA/mybatice/SpringJPA 차이점 : https://suhwan.dev/2019/02/24/jpa-vs-hibernate-vs-spring-data-jpa/
https://wikidocs.net/161165
https://gyeomii.tistory.com/11
https://blog.naver.com/PostView.nhn?blogId=ka28&logNo=222355010576

2. JSON 모크서버 
 - npm i -g json-server 
 - https://velog.io/@olwooz/JavaScript-JSON-Server%EB%A1%9C-Mock-API-%EB%A7%8C%EB%93%A4%EA%B8%B0
 - json-server --watch db.json --port 3001

3. git 되돌리기 (hard)
- git log
- git reset --hard 3d3f1e0d7e4fdeb0ed5c3c37722847637330df43


# 4Day (2023-11-03)
1. JPA 테이블 생성불가 해결 
 ->  application.properties 프로퍼티 속성변경 
2. local8080 실행불가 해결
 -> git 롤백이 후 리프래시/재빌드, 위 프로퍼티 파일 재수정
 -> spring.jpa.hibernate.ddl-auto=create 옵션이 최초실행이 아닐때 문제가되는듯 (none은 성공)
 -> Question 테이블 생성 문제 재확인필요
3. JPA user 테이블 insert 테스트
 - https://kim-oriental.tistory.com/20#google_vignette

파라미터 바인딩 설정 필요 : https://zzang9ha.tistory.com/399



-------------------------------------------
1. Spring Boot 띄워보기
EC2 인스턴스에 Spring Boot 서버 띄우기
배포 시스템 이런거 생략하고 진짜 단순하게 서버 띄우는 것만 확인해봅니다.

가장 간단한 방법은 두가지가 있는데 1번으로 진행하겠습니다.

jar 파일을 빌드하여 EC2 복사 후 실행
EC2 에서 프로젝트 git clone 후 실행


+ 도커.. 
 => 앞서 AWS EC2에 Jenkins를 연결하는 글을 작성했는데 그 다음 Jenkins가 스스로 도커 컨테이너를 이용해 빌드와 테스트를 할 수 있도록 하려고 한다. 😄
+ 배포 (젠킨스 사용)
 => https://velog.io/@hmyanghm/AWS-EC2%EC%97%90-Jenkins-%EC%84%9C%EB%B2%84-%EA%B5%AC%EC%B6%95
+ Mysql AWS 연동

git add --all
git commit -m "update memo"
git push --set-upstream origin master

